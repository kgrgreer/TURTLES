" \\033[0m"   ::ANSI.REVERT

" \033[1;31m" ::ANSI.RED
" \033[0;32m" ::ANSI.GREEN


// Build a Tester class to perform tests and record statistics
{ let 0 :passed 0 :failed |
  { m |
    m switch
      'ping 42
      'score { f this |
        f { | passed++ passed " PASSED" } { | failed++ failed " FAILED" } ifelse
      }
      'test { script answer this |
        .nl " Expect: " .$ script .$ "  -> " .$ answer . "  " .$ .nl
        script eval answer = this .score .$ .nl
      }
      'report { this |
        .nl
        " Tests Run: " .$ passed failed + . .nl
        "    PASSED: " .$ passed . .nl
        "    FAILED: " .$ failed . .nl
        .nl
      }
      { this | " unknown method: " .$ m .$ }
    end
  }
} ::Tester

// Create an instance of Tester
Tester :t

{ s | .nl .nl s .$ "  -------------------------------" .$  .nl } ::section

nop ::prompt

'Arithmetic section

// TODO: bug space needed before end quotes
" 1 1 + " 2 t .test
" 0 1 + " 1 t .test
" 2 1 - " 1 t .test
" 0 6 - " -6 t .test
" 4 2 * " 8 t .test
" 4 2 / " 2 t .test
" 10 3 mod " 1 t .test
" 2 8 ^ " 256 t .test
" 15 % " 0.15 t .test
" 15 10 10 ^ * " 150000000000 t .test // scientific notation, distance from earth to sun in meters
" 5 neg " -5 t .test
" 1 fact " 1 t .test
" 2 fact " 2 t .test
" 10 fact " 3628800 t .test
" 10 2 P " 90 t .test
" 10 2 C " 45 t .test

t .report
