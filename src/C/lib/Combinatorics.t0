{ n | n 1 <= { | 1 } { | n 1 - fact n * } ifelse } ::fact

// P(n,r) = n!/(n - r)!
{ n r | n fact n r - fact / } ::P

// C(n,r) = n!/(r!(n - r)!) = P(n,r)/r!
{ r | r P r fact / } ::C

{ let 42 :last |
  // TODO: add constants in immediate mode
  9223372036854775807 :IM
  3877   :IA
  29573  :IC

  { max |
    last IA * IC + IM mod :last
    last max mod abs
  }
} () ::rand


// TODO: move permute_ to be an inner function in permute
{ a f i let a i @ :v a # :l |
  i l 1 - =
  { | a f () }
  { |
    i l 1 -
      { j |
        a j @ a i :@
        v a j :@
        a f i 1 + permute_ ()
        a i @ a j :@
        v a i :@
      }
    for
  } ifelse
} :permute_

{ a f | a f 0 permute_ () } ::permute

(*
[ 1 2 3 4 ] { a | .nl a .[] } permute

[ #F #T ] { a | .nl a .[] } permute
*)
