'lib/parsers.t0 require

// Add string template support for string literals with interpolation like:
//    ${ string literal {{ firstName }} {{ 1 2 + #>$ }} blah blah }$

{ | // Create a sub-scope so that parser and compiler aren't globals
  i{
    { let
      Template: [ { | .Code } *char ] alt star joinp { s | [ "  [ " '""" ` s '"""  "  ] join " ] join } mapp ;
      Code:     [ '{{ { | .CodeBody } '}} ] 1 seq1 { c | [ '""" c '""" ` ] join } mapp ;
      CodeBody: [ '}} lit notp *char ] 1 seq1 plus joinp ;
    | { | ?? } } () :parser

    { input let input 0 #F #F parser PStream .Template :result |
      result { | result .value } { | " syntax error" .$ } ifelse
    } ::compiler
  }i

  { | '}$ readUntil compiler emit }
} () :!${
